name: build

on:
  push:
    tags:
      - v*

env:
  GH_TOKEN: ${{ github.token }}
  GO_VERSION: "^1.21"
  
jobs:
  get-release:
    name: Release pushed tag
    runs-on: ubuntu-22.04
    steps:
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
        run: |
          if gh release view "$tag" --repo="${{ github.repository }}" &> /dev/null; then
            echo "Release $tag already exists."
          else
            gh release create "$tag" \
              --repo="${{ github.repository }}" \
              --title="${tag}" \
              --draft \
              --generate-notes
            echo "Release $tag created."
          fi
  build-android-armeabi-v7a:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: nttld/setup-ndk@v1
        with:
          ndk-version: r26
          add-to-path: false
          local-cache: true
      - name: Build
        env:
          VERSION: ${{ env.GITHUB_REF_NAME }}
        run: |
          go install golang.org/x/mobile/cmd/gomobile@latest
          go get golang.org/x/mobile/bind
          gomobile init
          mkdir build && gomobile bind -trimpath -ldflags="-X 'github.com/Dreamacro/clash/constant.Version=${VERSION}' -X 'github.com/Dreamacro/clash/constant.BuildTime=$(date)' -w -s" -tags="with_gvisor" -o build/libclash.aar -target=android/armeabi-v7a -androidapi 29 -javapkg cn.mapleafgo github.com/Dreamacro/clash/bind/mobile

          tar -czf libclash-$VERSION-android-armeabi-v7a.tar.gz build && rm -rf build
          echo uploading...
          gh release upload $env:GITHUB_REF_NAME libclash-$VERSION-android-armeabi-v7a.tar.gz --clobber
          
  # build-libs:
  #   runs-on: ubuntu-latest
  #   needs: [ get-release ]
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-go@v4
  #       with:
  #         go-version: ${{ env.GO_VERSION }}
  #     - name: Build
  #       env:
  #         VERSION: ${{ env.GITHUB_REF_NAME }}
  #       run: |
  #         go install src.techknowlogick.com/xgo@latest
  #         mkdir build && xgo --targets=windows/amd64 -trimpath -ldflags="-X 'github.com/Dreamacro/clash/constant.Version=${VERSION}' -X 'github.com/Dreamacro/clash/constant.BuildTime=$(date)' -w -s" -tags="with_gvisor,with_lwip" -buildmode=c-shared -out=build/libclash.dll ./bind/desktop
  #         tar -czf libclash-$VERSION-windows-amd64.tar.gz build && rm -rf build

  #         mkdir build && xgo --targets=linux/amd64 -trimpath -ldflags="-X 'github.com/Dreamacro/clash/constant.Version=${VERSION}' -X 'github.com/Dreamacro/clash/constant.BuildTime=$(date)' -w -s" -tags="with_gvisor,with_lwip" -buildmode=c-shared -out=build/libclash.so ./bind/desktop
  #         tar -czf libclash-$VERSION-linux-amd64.tar.gz build && rm -rf build

  #         mkdir build && xgo --targets=linux/arm64 -trimpath -ldflags="-X 'github.com/Dreamacro/clash/constant.Version=${VERSION}' -X 'github.com/Dreamacro/clash/constant.BuildTime=$(date)' -w -s" -tags="with_gvisor,with_lwip" -buildmode=c-shared -out=build/libclash.so ./bind/desktop
  #         tar -czf libclash-$VERSION-linux-arm64.tar.gz build && rm -rf build

  #         mkdir build && xgo --targets=darwin/arm64 -trimpath -ldflags="-X 'github.com/Dreamacro/clash/constant.Version=${VERSION}' -X 'github.com/Dreamacro/clash/constant.BuildTime=$(date)' -w -s" -tags="with_gvisor,with_lwip" -buildmode=c-shared -out=build/libclash.dylib ./bind/desktop
  #         tar -czf libclash-$VERSION-darwin-arm64.tar.gz build && rm -rf build

  #         mkdir build && xgo --targets=darwin/amd64 -trimpath -ldflags="-X 'github.com/Dreamacro/clash/constant.Version=${VERSION}' -X 'github.com/Dreamacro/clash/constant.BuildTime=$(date)' -w -s" -tags="with_gvisor,with_lwip" -buildmode=c-shared -out=build/libclash.dylib ./bind/desktop
  #         tar -czf libclash-$VERSION-darwin-amd64.tar.gz build && rm -rf build
  #         gh release upload $env:GITHUB_REF_NAME libclash-$VERSION-darwin-amd64.tar.gz --clobber
   
  # build-android-arm64:
  #   runs-on: ubuntu-latest
  #   needs: [ get-release ]
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-go@v4
  #       with:
  #         go-version: ${{ env.GO_VERSION }}
  #     - uses: nttld/setup-ndk@v1
  #       with:
  #         ndk-version: r26
  #         add-to-path: false
  #         local-cache: true
  #     - name: Build
  #       env:
  #         VERSION: ${{ env.GITHUB_REF_NAME }}
  #       run: |
  #         go install golang.org/x/mobile/cmd/gomobile@latest
  #         go get golang.org/x/mobile/bind
  #         gomobile init
  #         mkdir build && gomobile bind -trimpath -ldflags="-X 'github.com/Dreamacro/clash/constant.Version=${VERSION}' -X 'github.com/Dreamacro/clash/constant.BuildTime=$(date)' -w -s" -tags="with_gvisor" -o build/libclash.aar -target=android/arm64 -androidapi 29 -javapkg cn.mapleafgo github.com/Dreamacro/clash/bind/mobile

  #         tar -czf libclash-$VERSION-android-arm64.tar.gz build && rm -rf build
  #         gh release upload $env:GITHUB_REF_NAME libclash-$VERSION-android-arm64.tar.gz --clobber
  # build-android-amd64:
  #   runs-on: ubuntu-latest
  #   needs: [ get-release ]
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-go@v4
  #       with:
  #         go-version: ${{ env.GO_VERSION }}
  #     - uses: nttld/setup-ndk@v1
  #       with:
  #         ndk-version: r26
  #         add-to-path: false
  #         local-cache: true
  #     - name: Build
  #       env:
  #         VERSION: ${{ env.GITHUB_REF_NAME }}
  #       run: |
  #         go install golang.org/x/mobile/cmd/gomobile@latest
  #         go get golang.org/x/mobile/bind
  #         gomobile init
  #         mkdir build && gomobile bind -trimpath -ldflags="-X 'github.com/Dreamacro/clash/constant.Version=${VERSION}' -X 'github.com/Dreamacro/clash/constant.BuildTime=$(date)' -w -s" -tags="with_gvisor" -o build/libclash.aar -target=android/amd64 -androidapi 29 -javapkg cn.mapleafgo github.com/Dreamacro/clash/bind/mobile

  #         tar -czf libclash-$VERSION-android-amd64.tar.gz build && rm -rf build
  #         gh release upload $env:GITHUB_REF_NAME libclash-$VERSION-android-amd64.tar.gz --clobber
  
  # build-ios:
  #   runs-on: macos-latest
  #   needs: [ get-release ]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-go@v4
  #       with:
  #         go-version: ${{ env.GO_VERSION }}
  #     - name: Build
  #       env:
  #         VERSION: ${{ env.GITHUB_REF_NAME }}
  #       run: |
  #         go install golang.org/x/mobile/cmd/gomobile@latest
  #         go get golang.org/x/mobile/bind
  #         gomobile init
  #         mkdir build && gomobile bind -trimpath -ldflags="-X 'github.com/Dreamacro/clash/constant.Version=${VERSION}' -X 'github.com/Dreamacro/clash/constant.BuildTime=$(date)' -w -s"  -tags="with_gvisor" -o build/libclash.xcframework -target=ios github.com/Dreamacro/clash/bind/mobile

  #         tar -czf libclash-$VERSION-ios.tar.gz build && rm -rf build
  #         gh release upload $env:GITHUB_REF_NAME libclash-$VERSION-ios.tar.gz --clobber
